<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
	<!-- Admin Login -->
	<select id="adminLogin" parameterType="mvo" resultType="mvo">
		select memnum,memname,memaddr,mempwd,memprofile,memjob,memauth,memmail,meminmail,memmgr,memdept,memhire,memresign,membirth,memsignimg 
		from (select * from member where memnum=1 and mempwd='1004') where memnum=#{memnum} and mempwd=#{mempwd}
	</select>

	<!-- 사원 추가(S) -->
	<insert id="addMember" parameterType="mvo">
		insert into member(memnum, memname,mempwd,memjob,memauth,memmail,memmgr,memdept)
		values(member_seq.nextVal,#{memname},#{mempwd},#{memjob},#{memauth},#{memmail},#{memmgr},#{memdept})
	</insert>

	<select id="getNewMemInfo" parameterType="mvo" resultType="mvo">
		select s.memnum,s.memname, d.dename, s.mempwd, m.memname mgrname,
		s.memmail
		from member s, dept d, member m where s.memmgr = m.memnum and s.memdept=
		d.denum and s.memmail=#{memmail} and s.memname=#{memname} and
		s.memdept=#{memdept}
	</select>

	<select id="getMemMgr" parameterType="int" resultType="mvo">
		select memnum,memname from member where memauth=4 and memdept=#{memdept}
	</select>

	<delete id="cancelAddMem" parameterType="int">
		delete from member where memnum=#{memnum}
	</delete>
	<!-- 사원 추가(E) -->

	<!-- 게시판 추가(S) -->
	<insert id="addBoard" parameterType="bnvo">
		insert into bname values(#{bname},bname_seq.nextVal,#{bdeptno})
	</insert>
	<!-- 게시판 추가(E) -->

	<!-- 사원 정보 불러오기 -->
	<select id="getMemInfoList" parameterType="mvo" resultType="mvo">
		select m.memnum, m.memname, m.meminmail, m.membirth, m.memaddr, 
		d.dename, m.memjob, to_char(m.memhire, 'yyyy-mm-dd') memhire from member m, dept d 
		where d.denum=m.memdept 
		<choose>
			<when test="memdept != 0">
				<!-- 부서만 입력 (해당 부서의 사원 목록)-->
				and m.memdept=#{memdept} 
				<!-- 부서, 이름 모두 입력 -->
				<if test="memname != null">
					and m.memname like '%'||#{memname}||'%' 
				</if>
			</when>
			<otherwise>
				<!-- 부서 0(기본값), 이름 입력 -->
				<if test="memname != null">
					and m.memname like '%'||#{memname}||'%' 
				</if>
				<!-- 부서 0, 이름 입력 안 한 경우(전체 사원 목록) -->
			</otherwise>
		</choose>
		and m.memname not in('sumware') and m.memresign is null order by 1 asc
	</select>
	
	<!-- 연봉 입력 -->
	<insert id="insertPay" parameterType="payvo">
		insert into pay values(#{pmem},#{pyearly},#{psalary})
	</insert>
	
	<!-- 퇴사 처리 -->
	<update id="resignMem" parameterType="int">
		update member set memresign=sysdate where memnum=#{memnum}
	</update>
	
	<!-- 멤버 정보 가져옴!!!! -->
	<select id="getMemInfo" parameterType="mvo" resultType="mvo">
		select m.memnum,m.memname,m.memaddr,m.mempwd,m.memprofile,m.memjob,
		m.memauth,m.memmail,m.meminmail,m.memmgr,m.memdept,m.memhire,m.memresign,m.membirth,m.memsignimg,
		d.dename from member m,dept d where memnum=#{memnum} and d.denum=m.memdept
	</select>
	
	<!-- 멤버의 pay 정보 가져옴 -->
	<select id="getPayInfo" parameterType="int" resultType="payvo">
		select pyearly, psalary, trunc((psalary/12),0) pmonthsalary from pay where pmem=#{memnum}
	</select>
	
	<!-- 추가 급여 지급 -->
	<insert id="giveBonus" parameterType="comvo">
		insert into commission values(#{comdetail},#{comamount},sysdate,commission_seq.nextVal,#{commem})
	</insert>
	
	<!-- 진급 처리 -->
	<update id="promoteMem" parameterType="mvo">
		update member set memjob=#{memjob} where memnum=#{memnum}
	</update>
	
	<!-- 부서 이동 -->
	<update id="moveDept" parameterType="mvo">
		update member set memdept=#{memdept} where memnum=#{memnum}
	</update>
	
	<!-- 해당 월의 commission 정보들 가져옴 -->
	<select id="getComInfo" parameterType="comvo" resultType="comvo">
	select comdetail, comamount , commem, comnum, to_char(comdate,'yyyy-mm') comdate 
		from commission where commem=#{commem} 
	<choose>
		<when test="comdate != null">
			and to_char(comdate,'yyyy-mm')=#{comdate}
		</when>
		<otherwise>
		and to_char(comdate,'yyyy-mm')=to_char(add_months(sysdate,-1),'yyyy-mm') 
		</otherwise>
	</choose>
	order by comnum asc
	</select>
	
	<!-- 월 급여 지급 : 무조건 지난 달 급여를 지급!!!-->
	<insert id="giveSalary" parameterType="phvo">
		insert into payhistory values(add_months(sysdate,-1), #{hisamount}, #{hismem},to_char(add_months(sysdate,-1),'yymm'))
	</insert>
	
	<!-- 사원마다 급여 지급 받은 이력이 있는 년도 뽑아옴 ( select태그에 추가하기 위해) -->
	<select id="getMonths" parameterType="int" resultType="phvo">
		select distinct(to_char(hisdate,'yyyy')) hisdate from payhistory where hismem=#{memnum}
	</select>
	
	<!-- payhistory 정보들 가져옴!!! -->
	<select id="getPayHistory" parameterType="phvo" resultType="phvo">
		select to_char(hisdate,'yyyy-mm') hisdate, hisamount,hismem,hisnum from payhistory where hismem=#{hismem} 
		<choose>
			<when test="hisdate != null">
				and to_char(hisdate,'yyyy')=#{hisdate} order by hisdate desc
			</when>
			<otherwise>order by hisdate desc</otherwise>
		</choose>
	</select>
	
	<!-- 부서별 게시판 리스트 가져옴 -->
	<select id="getDeptBoards" parameterType="int" resultType="bnvo">
		select bgnum,bname from bname where bdeptno=#{bdeptno}
	</select>
	
	<!-- 게시판 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		delete from bname where bgnum=#{bgnum}
	</delete>
	
</mapper>