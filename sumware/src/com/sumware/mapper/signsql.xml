<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sign">
	<!-- 해당부서의 결재 문서를 조회 하는 쿼리. model 에서 getSignList 와 맵핑 -->
	<select id="getSgList" parameterType="map" resultType="sgvo">
		<choose>
			<when test="signdiv==1">
				select res2.* from (select rownum row_n , res.* from (select sg.snum,sg.formnum,sg.finalmemnum,sg.nowmemnum,nvl(sg.stitle,'제목없음') stitle,sg.scont,sg.sreason,sg.sgreturncomm,
				to_char(sg.startdate,'yy-mm-dd') startdate,to_char(sg.enddate,'yy-mm-dd') enddate,sg.sgwriter,sg.sgdept,sf.sfname,(select count(stepconfirm) ycount from signstep where stepconfirm='y' and signstep.STEPSNUM=sg.snum) ycount,
				(select count(stepconfirm) ncount from signstep where  signstep.STEPSNUM=sg.snum) count,m.memname
				from signature sg,signform sf,member m where sg.formnum=sf.sfnum and m.memnum=sg.sgwriter and nowmemnum=#{nowmemnum} and nvl(sg.sgreturncomm,'0')='0' order by snum desc) res 
			</when>
			
			<when test="signdiv==2">
				select res2.* from (select rownum row_n , res.* from (select st.* from(select sg.snum,sg.formnum,sg.finalmemnum,sg.nowmemnum,nvl(sg.stitle,'제목없음') stitle,sg.scont,sg.sreason,sg.sgreturncomm,
				to_char(sg.startdate,'yy-mm-dd') startdate,to_char(sg.enddate,'yy-mm-dd') enddate,sg.sgwriter,sg.sgdept,sf.sfname,(select count(stepconfirm) ycount from signstep where stepconfirm='y' and signstep.STEPSNUM=sg.snum) ycount,
				(select count(stepconfirm) ncount from signstep where  signstep.STEPSNUM=sg.snum) count,m.memname
				from signature sg,signform sf,member m where sg.formnum=sf.sfnum and m.memnum=sg.sgwriter and nvl(sg.sgreturncomm,'0')='0' order by snum desc) st where ycount != count) res 
			</when>
			<when test="signdiv==3">
				select res2.* from (select rownum row_n , res.* from (select st.* from(select sg.snum,sg.formnum,sg.finalmemnum,sg.nowmemnum,nvl(sg.stitle,'제목없음') stitle,sg.scont,sg.sreason,sg.sgreturncomm,
				to_char(sg.startdate,'yy-mm-dd') startdate,to_char(sg.enddate,'yy-mm-dd') enddate,sg.sgwriter,sg.sgdept,sf.sfname,(select count(stepconfirm) ycount from signstep where stepconfirm='y' and signstep.STEPSNUM=sg.snum) ycount,
				(select count(stepconfirm) ncount from signstep where  signstep.STEPSNUM=sg.snum) count,m.memname
				from signature sg,signform sf,member m where sg.formnum=sf.sfnum and m.memnum=sg.sgwriter order by snum desc) st where ycount = count) res 
			</when>
			<when test="signdiv==4">
				select res2.* from (select rownum row_n , res.* from (select sg.snum,sg.formnum,sg.finalmemnum,sg.nowmemnum,nvl(sg.stitle,'제목없음') stitle,sg.scont,sg.sreason,sg.sgreturncomm,
				to_char(sg.startdate,'yy-mm-dd') startdate,to_char(sg.enddate,'yy-mm-dd') enddate,sg.sgwriter,sg.sgdept,sf.sfname,(select count(stepconfirm) ycount from signstep where stepconfirm='y' and signstep.STEPSNUM=sg.snum) ycount,
				(select count(stepconfirm) ncount from signstep where  signstep.STEPSNUM=sg.snum) count,m.memname
				from signature sg,signform sf,member m where sg.formnum=sf.sfnum and m.memnum=sg.sgwriter and nvl(sg.sgreturncomm,'0')!='0' order by snum desc) res 
			</when>
			<otherwise>
				select res2.* from (select rownum row_n , res.* from (select sg.snum,sg.formnum,sg.finalmemnum,sg.nowmemnum,nvl(sg.stitle,'제목없음') stitle,sg.scont,sg.sreason,sg.sgreturncomm,
				to_char(sg.startdate,'yy-mm-dd') startdate,to_char(sg.enddate,'yy-mm-dd') enddate,sg.sgwriter,sg.sgdept,sf.sfname,(select count(stepconfirm) ycount from signstep where stepconfirm='y' and signstep.STEPSNUM=sg.snum) ycount,
				(select count(stepconfirm) ncount from signstep where  signstep.STEPSNUM=sg.snum) count,m.memname
				from signature sg,signform sf,member m where sg.formnum=sf.sfnum and m.memnum=sg.sgwriter order by snum desc) res 
			</otherwise>
		</choose>
		<where>
			<choose>
				<when test="except==0">
					<choose>
						<when test="searchType==0">
							(res.snum like '%'||#{searchName}||'%' or res.stitle like '%'||#{searchName}||'%' or res.memname like '%'||#{searchName}||'%')
						</when>
						<when test="searchType==1">
							(res.snum like '%'||#{searchName}||'%')
						</when>
						<when test="searchType==2">
							(res.stitle like '%'||#{searchName}||'%')
						</when>
						<otherwise>
							(res.memname like '%'||#{searchName}||'%')
						</otherwise>
					</choose>
					<choose>
						<when test="selectDay=='today'">
							 and res.startdate = to_date(sysdate,'yy-mm-dd')
						</when>
						<when test="selectDay=='week'">
							and res.startdate <![CDATA[>]]> to_date(sysdate,'yy-mm-dd')-7
						</when>
						<when test="selectDay=='month'">
							and res.startdate <![CDATA[>]]> add_months(to_date(sysdate,'yy-mm-dd'),-3)
						</when>
						<otherwise></otherwise>
					</choose>
					<if test="searchStartDay!=''">
						and res.startdate<![CDATA[>=]]>to_date(#{searchStartDay},'yy-mm-dd')
					</if>
					<if test="searchEndDay!=''">
						and res.enddate<![CDATA[<=]]>to_date(#{searchEndDay},'yy-mm-dd')
					</if>
					<choose>
						<when test="searchDocState==1">
							and ycount=count
						</when>
						<when test="searchDocState==2">
							and ycount<![CDATA[<]]>count
						</when>
						<when test="searchDocState==3">
							and nvl(res.sgreturncomm,'0')=0
						</when>
						<otherwise></otherwise>							
					</choose>
					<if test="searchDocDiv!=0">
						and res.formnum=#{searchDocDiv}
					</if>
					<if test="searchDept!=0">
						and res.sgdept=#{searchDept}
					</if>
				</when>
				<when test="except==1">
					<choose>
						<when test="searchType==0">
							not ((res.snum like '%'||#{searchName}||'%' or res.stitle like '%'||#{searchName}||'%' or res.memname like '%'||#{searchName}||'%')
						</when>
						<when test="searchType==1">
							not ((res.snum like '%'||#{searchName}||'%')
						</when>
						<when test="searchType==2">
							not ((res.stitle like '%'||#{searchName}||'%')
						</when>
						<otherwise>
							not ((res.memname like '%'||#{searchName}||'%')
						</otherwise>
					</choose>
					<if test="searchStartDay!=''">
						and res.startdate<![CDATA[>=]]>to_date(#{searchStartDay},'yy-mm-dd')
					</if>
					<if test="searchEndDay!=''">
						and res.enddate<![CDATA[<=]]>to_date(#{searchEndDay},'yy-mm-dd')
					</if>
					<choose>
						<when test="searchDocState==1">
							and ycount=count
						</when>
						<when test="searchDocState==2">
							and ycount<![CDATA[<]]>count
						</when>
						<when test="searchDocState==3">
							and nvl(res.sgreturncomm,'0')=0
						</when>
						<otherwise></otherwise>							
					</choose>
					<if test="searchDocDiv!=0">
						and res.formnum=#{searchDocDiv}
					</if>
					<if test="searchDept!=0">
						and res.sgdept=#{searchDept}
					</if>
					)
				</when>
				<otherwise></otherwise>
			</choose>
		</where>
		) res2 where row_n BETWEEN #{begin} and #{end}
	</select>
	
	<!-- 회사내규에 있는 결재 문서들의 종류를 보여주는 메소드 -->
	<!-- 멤버의 정보로 결재문서들을 불러온다. -->
	<select id="getSfList" resultType="sfvo">
		select * from signform
	</select>
	<select id="getMgr" parameterType="int" resultType="mvo">
		select * from member where memnum=(select memmgr from member where memnum=#{memnum})
	</select>
	<select id="getMgrName" parameterType="int" resultType="String">
		select memname from member where memnum = #{memnum}
	</select>
	
	<!-- 결재문서의 종류 중 하나를 택해서 불러온다. -->
	<select id="getSf" parameterType="int" resultType="sfvo">
		select * from signform where sfnum=#{sfnum}
	</select>
	
	<!-- 선택된 문서를 작성 한다 -->
	<insert id="writeSf" parameterType="sgvo">
		insert into signature(snum,formnum,finalmemnum,nowmemnum,stitle,scont,sreason,startdate,enddate,sgwriter,sgdept,sdate,splace,sps)
		values(signature_seq.nextVal,#{formnum},#{finalmemnum},#{nowmemnum},#{stitle},#{scont},#{sreason},#{startdate},#{enddate},#{sgwriter},#{sgdept},#{sdate},#{splace},#{sps})
	</insert>
	<select id="getMax" resultType="int">
		select max(snum) snum from signature
	</select>
	<insert id="writeSignStep" parameterType="map">
		insert into signstep(stepnum,stepsnum,stepmemnum,stepconfirm)
		values(signstep_seq.nextVal,#{stepsnum},#{stepmemnum},#{stepconfirm})
	</insert>
	<!-- / -->
	<!-- detail -->
	<select id="signDetail" parameterType="int" resultType="sgvo">
		select sg.snum,sg.formnum,sg.finalmemnum,sg.nowmemnum,nvl(sg.stitle,'제목없음') stitle,sg.scont,sg.sreason,sg.sgreturncomm,
		to_char(sg.startdate,'yyyy-MM-dd') startdate,to_char(sg.enddate,'yyyy-MM-dd') enddate,
		(select count(stepconfirm) ycount from signstep where stepconfirm='y' and signstep.STEPSNUM=sg.snum) ycount,
		(select count(stepconfirm) ncount from signstep where  signstep.STEPSNUM=sg.snum) count,m.memname,
		sg.sgwriter,sg.sdate,sg.splace,sg.sps,m.memname from signature sg,member m where m.memnum=sg.sgwriter and snum = #{snum}
	</select>
	<select id="getSignStep" parameterType="int" resultType="ssvo">
		select * from signstep where stepsnum = #{stepsnum} order by stepnum desc
	</select>
	<!-- / -->
	<!-- 결재저장. -->
	<update id="updateSignStep" parameterType="map">
		update signstep set stepconfirm=#{stepconfirm} where stepnum=#{stepnum}
	</update>
	<select id="getNowmem" parameterType="int" resultType="int">
		select nvl(max(stepmemnum),0) from signstep where stepconfirm ='n' and stepsnum=#{stepsnum}
	</select>
	<update id="setNowmem" parameterType="map">
		update signature set nowmemnum=#{nowmemnum} where snum=#{snum}
	</update>
	<!-- 반려 -->
	<update id="signReturn" parameterType="map">
		update signature set sgreturn=#{sgreturn},sgreturncomm=#{sgreturncomm} where snum=#{snum}
	</update>
	<!-- signImg 뽑기 -->
	<select id="getSignImg" parameterType="int" resultType="mvo">
		select memname,memsignimg from member where memnum=#{memnum}
	</select>
	<!-- total -->
	<select id="getSignCount" parameterType="map" resultType="int">
		<choose>
			<when test="signdiv==1">
				select count(*)  from signature sg,signform sf,member m where sg.formnum=sf.sfnum and m.memnum=sg.sgwriter and nowmemnum=#{nowmemnum} and nvl(sg.sgreturncomm,'0')='0'
			</when>
			<when test="signdiv==2">
				select count(*) from (select (select count(stepconfirm) ycount from signstep where stepconfirm='y' and signstep.STEPSNUM=sg.snum) ycount,
				(select count(stepconfirm) ncount from signstep where  signstep.STEPSNUM=sg.snum) count
				from signature sg,signform sf,member m where sg.formnum=sf.sfnum and m.memnum=sg.sgwriter and nvl(sg.sgreturncomm,'0')='0') st where ycount != count
			</when>
			<when test="signdiv==3">
				select count(*) from (select (select count(stepconfirm) ycount from signstep where stepconfirm='y' and signstep.STEPSNUM=sg.snum) ycount,
				(select count(stepconfirm) ncount from signstep where  signstep.STEPSNUM=sg.snum) count
				from signature sg,signform sf,member m where sg.formnum=sf.sfnum and m.memnum=sg.sgwriter and nvl(sg.sgreturncomm,'0')='0') st where ycount = count
			</when>
			<when test="signdiv==4">
				select count(*) from (select (select count(stepconfirm) ycount from signstep where stepconfirm='y' and signstep.STEPSNUM=sg.snum) ycount,
				(select count(stepconfirm) ncount from signstep where  signstep.STEPSNUM=sg.snum) count
				from signature sg,signform sf,member m where sg.formnum=sf.sfnum and m.memnum=sg.sgwriter and nvl(sg.sgreturncomm,'0')!='0') st
			</when>
			<otherwise>
				select count(*) from signature
			</otherwise>
		</choose>
	</select>
	<select id="getDept" resultType="dvo">
		select * from dept where not denum=999
	</select>
</mapper>